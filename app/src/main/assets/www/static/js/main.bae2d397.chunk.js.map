{"version":3,"sources":["db/dao.js","route/home.js","view/formDialog.js","view/list.js","route/detail.js","route/router.js","reportWebVitals.js","index.js"],"names":["db","openDB","onSuccess","undefined","request","window","indexedDB","open","onupgradeneeded","event","objectStore","target","result","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","createIndex","unique","onerror","console","log","onsuccess","get","day","month","year","transaction","index","getAll","BottomDiv","styled","div","StyledButton","Button","Home","history","useHistory","date","useRef","moment","onChange","useCallback","current","handleRecordClick","push","pathname","search","state","handleExportClick","rest","androidAssistant","save","array","length","set","forEach","value","key","name","batch","amount","totalPrice","csv","concat","batchPrice","price","toCsv","defaultValue","fullscreen","type","shape","onClick","ErrorMessage","span","placeholder","defaultData","FormDialog","props","useState","error","setError","data","setData","useEffect","item","Object","keys","handleChange","getAttribute","pre","title","visible","onOk","id","updateData","addData","onClose","onCancel","List","CenterDiv","ListView","ref","source","onDelete","onEdit","EditItemIndex","setEditItemIndex","map","toFixed","style","display","forwardRef","StyledPlusCircleOutlined","PlusCircleOutlined","Detail","isDialogVisible","setIsDialogVisible","dataArray","setDataArray","listView","createRef","location","useLocation","editIngItem","showDialog","closeDialog","addData2DB","v","add","getData","deleteDataFromDB","delete","remove","updateDataFromDB","put","update","handleOnEdit","scrollIntoView","behavior","el","icon","BasicRoute","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","locale","zhCN","document","getElementById"],"mappings":"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","file":"static/js/main.bae2d397.chunk.js","sourcesContent":["var db;\n\nexport function openDB(onSuccess) {\n  if (db !== undefined) {\n    onSuccess();\n    return;\n  }\n\n  var request = window.indexedDB.open(\"work\", 1);\n\n  request.onupgradeneeded = function (event) {\n    db = event.target.result;\n    var objectStore;\n    if (!db.objectStoreNames.contains(\"zhou\")) {\n      objectStore = db.createObjectStore(\"zhou\", {\n        keyPath: \"id\",\n        autoIncrement: true,\n      });\n      objectStore.createIndex(\"day\", [\"day\", \"month\", \"year\"], {\n        unique: false,\n      });\n      objectStore.createIndex(\"month\", [\"month\", \"year\"], { unique: false });\n    }\n  };\n\n  request.onerror = function () {\n    console.log(\"数据库打开报错\");\n  };\n  request.onsuccess = function () {\n    db = request.result;\n    console.log(\"数据库打开成功\");\n    onSuccess();\n  };\n}\n\nexport function add(onSuccess, item) {\n  var request = db\n    .transaction([\"zhou\"], \"readwrite\")\n    .objectStore(\"zhou\")\n    .add(item);\n\n  request.onerror = function () {\n    console.log(\"数据写入失败\");\n  };\n  request.onsuccess = function () {\n    console.log(\"数据写入成功\");\n    onSuccess();\n  };\n}\n\nexport function get(onSuccess, { day, month, year }) {\n  var transaction = db.transaction([\"zhou\"]);\n  var objectStore = transaction.objectStore(\"zhou\");\n  var request;\n  if (day && month && year) {\n    request = objectStore.index(\"day\").getAll([day, month, year]);\n  } else if (month && year) {\n    request = objectStore.index(\"month\").getAll([month, year]);\n  } else {\n    return;\n  }\n\n  request.onerror = function () {\n    console.log(\"读取失败\");\n  };\n\n  request.onsuccess = function () {\n    if (request.result) {\n      onSuccess(request.result);\n    } else {\n      console.log(\"未获得数据记录\");\n    }\n  };\n}\n\nexport function update(onSuccess, item) {\n  var request = db\n    .transaction([\"zhou\"], \"readwrite\")\n    .objectStore(\"zhou\")\n    .put(item);\n\n  request.onsuccess = function () {\n    onSuccess(request.result);\n    console.log(\"数据更新成功\");\n  };\n\n  request.onerror = function () {\n    console.log(\"数据更新失败\");\n  };\n}\n\nexport function remove(onSuccess, key) {\n  var request = db\n    .transaction([\"zhou\"], \"readwrite\")\n    .objectStore(\"zhou\")\n    .delete(key);\n\n  request.onsuccess = function () {\n    console.log(\"数据删除成功\");\n    onSuccess();\n  };\n  request.onerror = function () {\n    console.log(\"数据删除失败\");\n  };\n}\n","import React, { useRef, useCallback } from \"react\";\nimport { Calendar, Button } from \"antd\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { openDB, get } from \"../db/dao\";\n\nconst BottomDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 5%;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 4em;\n  height: 4em;\n`;\n\nexport default function Home() {\n  const history = useHistory();\n  let date = useRef({\n    year: moment().year(),\n    month: moment().month(),\n    day: moment().date(),\n  });\n\n  const onChange = useCallback((moment) => {\n    date.current = {\n      year: moment.year(),\n      month: moment.month(),\n      day: moment.date(),\n    };\n  }, []);\n\n  const handleRecordClick = useCallback(() => {\n    history.push({\n      pathname: \"/detail\",\n      search: `?date=${date.current.month}/${date.current.day}/${date.current.year}`,\n      state: {\n        date: date.current,\n      },\n    });\n  }, []);\n\n  const handleExportClick = useCallback(() => {\n    // eslint-disable-next-line no-unused-vars\n    let { day, ...rest } = date.current;\n    openDB(() => {\n      get((result) => {\n        window.androidAssistant.save(toCsv(result));\n      }, rest);\n    });\n  });\n\n  function toCsv(array) {\n    if (array === undefined || array.length == 0) {\n      return \"\";\n    }\n    let set = {};\n    array.forEach((value) => {\n      let key = value.name + value.batch;\n      if (set[key]) {\n        set[key].amount = +set[key].amount + +value.amount;\n      } else {\n        set[key] = value;\n      }\n    });\n\n    let totalPrice = null;\n    let csv = \"\";\n    csv = csv.concat(+date.current.month + 1, \"_\", date.current.year, \"##\");\n    csv = csv.concat(\"工序,货号,单价,数量,总价\").concat(\"\\r\\n\");\n    for (let key in set) {\n      let value = set[key];\n      let batchPrice = value.amount * value.price;\n      totalPrice += batchPrice;\n      csv = csv\n        .concat(\n          `${value.name},${value.batch},${value.price},${value.amount},${batchPrice}`\n        )\n        .concat(\"\\r\\n\");\n    }\n\n    csv = csv.concat(`总价,,,,${totalPrice}`);\n    return csv;\n  }\n\n  return (\n    <>\n      <Calendar\n        defaultValue={moment()}\n        onChange={onChange}\n        fullscreen={false}\n      />\n      <BottomDiv>\n        <StyledButton type=\"primary\" shape=\"circle\" onClick={handleRecordClick}>\n          记录\n        </StyledButton>\n        <StyledButton type=\"primary\" shape=\"circle\" onClick={handleExportClick}>\n          导出\n        </StyledButton>\n      </BottomDiv>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal, Input } from \"antd\";\nimport styled from \"styled-components\";\n\nconst ErrorMessage = styled.span`\n  margin-top: 0.5em;\n  color: red;\n`;\n\nFormDialog.propTypes = {\n  visible: PropTypes.bool,\n  item: PropTypes.object,\n  onClose: PropTypes.func,\n  addData: PropTypes.func,\n  updateData: PropTypes.func,\n};\n\nconst placeholder = {\n  name: \"工序\",\n  batch: \"货号\",\n  price: \"单价\",\n  amount: \"数量\",\n};\n\nconst defaultData = {\n  name: \"\",\n  batch: \"\",\n  price: \"\",\n  amount: \"\",\n};\n\nexport default function FormDialog(props) {\n  const [error, setError] = useState(\"\");\n  const [data, setData] = useState({ ...defaultData });\n\n  useEffect(() => {\n    setData(\n      !props.item || Object.keys(props.item).length === 0\n        ? { ...defaultData }\n        : props.item\n    );\n  }, [props.item]);\n\n  const handleChange = (event) => {\n    setError(\"\");\n    var key = event.target.getAttribute(\"id\");\n    var value = event.target.value;\n    setData((pre) => {\n      pre[key] = value;\n      return { ...pre };\n    });\n  };\n\n  const handleOk = () => {\n    for (var key in data) {\n      if (data[key] == \"\") {\n        setError(`${placeholder[key]}不能为空`);\n\n        return;\n      }\n    }\n\n    if (data.id) {\n      props.updateData(data);\n    } else {\n      props.addData(data);\n    }\n    props.onClose();\n  };\n\n  return (\n    <>\n      <Modal\n        title=\"物料计价\"\n        visible={props.visible}\n        onOk={handleOk}\n        onCancel={props.onClose}\n      >\n        <Input\n          id=\"name\"\n          value={data.name}\n          placeholder={placeholder[\"name\"]}\n          onChange={handleChange}\n        />\n        <Input\n          id=\"batch\"\n          value={data.batch}\n          placeholder={placeholder[\"batch\"]}\n          onChange={handleChange}\n        />\n        <Input\n          type=\"number\"\n          id=\"price\"\n          value={data.price}\n          placeholder={placeholder[\"price\"]}\n          onChange={handleChange}\n        />\n        <Input\n          type=\"number\"\n          id=\"amount\"\n          value={data.amount}\n          placeholder={placeholder[\"amount\"]}\n          onChange={handleChange}\n        />\n        <ErrorMessage>{error}</ErrorMessage>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"antd\";\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  margin: 0.5em;\n  padding: 0.5em;\n  border: 1px solid #330000;\n`;\n\nconst CenterDiv = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nListView.propTypes = {\n  source: PropTypes.array,\n  onDelete: PropTypes.func,\n  onEdit : PropTypes.func,\n};\n\nfunction ListView({ source, onDelete, onEdit}, ref) {\n  const [EditItemIndex, setEditItemIndex] = useState();\n\n  return (\n    <div>\n      {source.map(function (item, index) {\n        return (\n          <div key={index}>\n            <List ref={ref}>\n              <div>\n                <div>{item.name}</div>\n                <div>{item.batch}</div>\n              </div>\n              <div>\n                <div>{item.price + \"元/件\"}</div>\n                <div>{item.amount + \"件\"}</div>\n              </div>\n              <CenterDiv>{(item.price * item.amount).toFixed(2)}元</CenterDiv>\n            </List>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                EditItemIndex === index\n                  ? setEditItemIndex(null)\n                  : setEditItemIndex(index);\n              }}\n            >\n              编辑\n            </Button>\n            <Button\n              type=\"link\"\n              onClick={() => {\n                onDelete(item.id);\n              }}\n              style={{ display: EditItemIndex === index ? \"inline\" : \"none\" }}\n            >\n              删除\n            </Button>\n            <Button\n              type=\"link\"\n              onClick={() => {\n                onEdit(index);\n              }}\n              style={{ display: EditItemIndex === index ? \"inline\" : \"none\" }}\n            >\n              修改\n            </Button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default forwardRef(ListView);\n","import React, {\n  useState,\n  useCallback,\n  useEffect,\n  createRef,\n  useRef,\n} from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport styled from \"styled-components\";\nimport FormDialog from \"../view/formDialog\";\nimport ListView from \"../view/list\";\nimport { openDB, get, add, remove, update } from \"../db/dao\";\n\nconst StyledPlusCircleOutlined = styled(PlusCircleOutlined)`\n  font-size: 4em;\n`;\n\nconst StyledButton = styled(Button)`\n  display: block;\n  margin: 0 auto;\n  width: 80px;\n  height: 80px;\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 5%;\n`;\n\nexport default function Detail() {\n  const [isDialogVisible, setIsDialogVisible] = useState(false);\n  const [dataArray, setDataArray] = useState([]);\n  const listView = createRef();\n  const location = useLocation();\n  let editIngItem = useRef();\n\n  const showDialog = useCallback(() => {\n    setIsDialogVisible(true);\n  }, []);\n\n  const closeDialog = useCallback(() => {\n    editIngItem.current = undefined;\n    setIsDialogVisible(false);\n  }, []);\n\n  const addData2DB = useCallback((v) => {\n    openDB(() => {\n      add(\n        () => {\n          getData();\n        },\n        { ...v, ...location.state.date }\n      );\n    });\n  }, []);\n\n  const deleteDataFromDB = useCallback((key) => {\n    openDB(() => {\n      remove(() => {\n        getData();\n      }, key);\n    });\n  }, []);\n\n  const updateDataFromDB = useCallback((item) => {\n    openDB(() => {\n      update(() => {\n        getData();\n      }, item);\n    });\n  }, []);\n\n  const handleOnEdit = useCallback((index) => {\n    editIngItem.current = dataArray[index];\n    showDialog();\n  });\n\n  useEffect(() => {\n    openDB(() => {\n      getData();\n    });\n  }, []);\n\n  useEffect(() => {\n    if (listView.current)\n      listView.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [dataArray]);\n\n  const getData = function () {\n    get((result) => {\n      setDataArray(result);\n    }, location.state.date);\n  };\n\n  return (\n    <>\n      <ListView\n        source={dataArray}\n        onDelete={deleteDataFromDB}\n        onEdit={handleOnEdit}\n        ref={(el) => {\n          listView.current = el;\n        }}\n      />\n      <FormDialog\n        visible={isDialogVisible}\n        onClose={closeDialog}\n        addData={addData2DB}\n        updateData={updateDataFromDB}\n        item={{ ...editIngItem.current }}\n      />\n      <StyledButton\n        type=\"primary\"\n        shape=\"circle\"\n        onClick={showDialog}\n        icon={<StyledPlusCircleOutlined />}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport Home from \"./home\";\nimport Detail from \"./detail\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst BasicRoute = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/detail\" component={Detail} />\n    </Switch>\n  </Router>\n);\n\nexport default BasicRoute;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./route/router\";\nimport zhCN from \"antd/es/locale/zh_CN\";\nimport \"moment/locale/zh-cn\";\nimport { ConfigProvider } from \"antd\";\nimport \"antd/dist/antd.less\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider locale={zhCN}>\n      <Router />\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}